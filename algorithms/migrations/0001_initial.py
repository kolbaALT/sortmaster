# Generated by Django 5.2.1 on 2025-06-01 23:53

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Algorithm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название алгоритма')),
                ('name_en', models.CharField(max_length=100, verbose_name='Название на английском')),
                ('description', models.TextField(verbose_name='Описание')),
                ('complexity_best', models.CharField(max_length=50, verbose_name='Лучшая сложность')),
                ('complexity_average', models.CharField(max_length=50, verbose_name='Средняя сложность')),
                ('complexity_worst', models.CharField(max_length=50, verbose_name='Худшая сложность')),
                ('space_complexity', models.CharField(max_length=50, verbose_name='Пространственная сложность')),
                ('is_stable', models.BooleanField(default=False, verbose_name='Стабильный')),
                ('difficulty_level', models.IntegerField(choices=[(1, 'Легкий'), (2, 'Средний'), (3, 'Сложный')], default=1, verbose_name='Уровень сложности')),
                ('order', models.IntegerField(default=0, verbose_name='Порядок отображения')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Алгоритм',
                'verbose_name_plural': 'Алгоритмы',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='UserAlgorithmStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_sessions', models.IntegerField(default=0, verbose_name='Всего сессий')),
                ('completed_sessions', models.IntegerField(default=0, verbose_name='Завершенных сессий')),
                ('best_time', models.FloatField(blank=True, null=True, verbose_name='Лучшее время')),
                ('average_comparisons', models.FloatField(blank=True, null=True, verbose_name='Среднее количество сравнений')),
                ('last_session_date', models.DateTimeField(auto_now=True, verbose_name='Дата последней сессии')),
            ],
            options={
                'verbose_name': 'Статистика по алгоритму',
                'verbose_name_plural': 'Статистика по алгоритмам',
            },
        ),
        migrations.CreateModel(
            name='SimulationSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('array_size', models.IntegerField(verbose_name='Размер массива')),
                ('initial_array', models.JSONField(verbose_name='Начальный массив')),
                ('steps_count', models.IntegerField(default=0, verbose_name='Количество шагов')),
                ('comparisons_count', models.IntegerField(default=0, verbose_name='Количество сравнений')),
                ('swaps_count', models.IntegerField(default=0, verbose_name='Количество обменов')),
                ('execution_time', models.FloatField(blank=True, null=True, verbose_name='Время выполнения (мс)')),
                ('completed', models.BooleanField(default=False, verbose_name='Завершена')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('algorithm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='algorithms.algorithm', verbose_name='Алгоритм')),
            ],
            options={
                'verbose_name': 'Сессия симуляции',
                'verbose_name_plural': 'Сессии симуляции',
                'ordering': ['-created_at'],
            },
        ),
    ]
